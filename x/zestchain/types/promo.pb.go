// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: zestchain/promo.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Promo struct {
	Index   string `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	Pot     string `protobuf:"bytes,3,opt,name=pot,proto3" json:"pot,omitempty"`
	Url     string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Title   string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Msg     string `protobuf:"bytes,6,opt,name=msg,proto3" json:"msg,omitempty"`
	Tags    string `protobuf:"bytes,7,opt,name=tags,proto3" json:"tags,omitempty"`
	Prefs   string `protobuf:"bytes,8,opt,name=prefs,proto3" json:"prefs,omitempty"`
}

func (m *Promo) Reset()         { *m = Promo{} }
func (m *Promo) String() string { return proto.CompactTextString(m) }
func (*Promo) ProtoMessage()    {}
func (*Promo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ceee59a13aa0303c, []int{0}
}
func (m *Promo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Promo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Promo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Promo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Promo.Merge(m, src)
}
func (m *Promo) XXX_Size() int {
	return m.Size()
}
func (m *Promo) XXX_DiscardUnknown() {
	xxx_messageInfo_Promo.DiscardUnknown(m)
}

var xxx_messageInfo_Promo proto.InternalMessageInfo

func (m *Promo) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *Promo) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Promo) GetPot() string {
	if m != nil {
		return m.Pot
	}
	return ""
}

func (m *Promo) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Promo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Promo) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *Promo) GetTags() string {
	if m != nil {
		return m.Tags
	}
	return ""
}

func (m *Promo) GetPrefs() string {
	if m != nil {
		return m.Prefs
	}
	return ""
}

func init() {
	proto.RegisterType((*Promo)(nil), "cytruslabs.zestchain.zestchain.Promo")
}

func init() { proto.RegisterFile("zestchain/promo.proto", fileDescriptor_ceee59a13aa0303c) }

var fileDescriptor_ceee59a13aa0303c = []byte{
	// 239 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xb1, 0x4a, 0xc4, 0x40,
	0x10, 0x86, 0xb3, 0xde, 0xe5, 0x4e, 0xb7, 0x92, 0x45, 0x61, 0xaa, 0x45, 0xac, 0xac, 0x12, 0xc4,
	0x37, 0xb0, 0xb5, 0x11, 0x4b, 0xbb, 0x24, 0xae, 0xb9, 0x40, 0x72, 0xbb, 0xcc, 0xcc, 0xc2, 0x9d,
	0x4f, 0xe1, 0x8b, 0xf8, 0x1e, 0x96, 0x29, 0x2d, 0x25, 0x79, 0x11, 0xd9, 0x5d, 0x34, 0x76, 0xff,
	0xff, 0xf1, 0xcd, 0xc0, 0x8c, 0xbc, 0x7c, 0x33, 0xc4, 0xcd, 0xae, 0xea, 0xf6, 0xa5, 0x43, 0x3b,
	0xd8, 0xc2, 0xa1, 0x65, 0xab, 0x74, 0x73, 0x64, 0xf4, 0xd4, 0x57, 0x35, 0x15, 0x7f, 0xc6, 0x92,
	0xae, 0x3f, 0x84, 0xcc, 0x1f, 0x83, 0xaf, 0x2e, 0x64, 0xde, 0xed, 0x5f, 0xcc, 0x01, 0xc4, 0x95,
	0xb8, 0x39, 0x7b, 0x4a, 0x45, 0x81, 0xdc, 0x36, 0x68, 0x2a, 0xb6, 0x08, 0x27, 0x91, 0xff, 0x56,
	0x75, 0x2e, 0x57, 0xce, 0x32, 0xac, 0x22, 0x0d, 0x31, 0x10, 0x8f, 0x3d, 0xac, 0x13, 0xf1, 0xd8,
	0x87, 0x9d, 0xdc, 0x71, 0x6f, 0x20, 0x4f, 0x3b, 0x63, 0x09, 0xde, 0x40, 0x2d, 0x6c, 0x92, 0x37,
	0x50, 0xab, 0x94, 0x5c, 0x73, 0xd5, 0x12, 0x6c, 0x23, 0x8a, 0x39, 0xcc, 0x3a, 0x34, 0xaf, 0x04,
	0xa7, 0x69, 0x36, 0x96, 0xfb, 0x87, 0xcf, 0x49, 0x8b, 0x71, 0xd2, 0xe2, 0x7b, 0xd2, 0xe2, 0x7d,
	0xd6, 0xd9, 0x38, 0xeb, 0xec, 0x6b, 0xd6, 0xd9, 0xf3, 0x6d, 0xdb, 0xf1, 0xce, 0xd7, 0x45, 0x63,
	0x87, 0x72, 0x39, 0xba, 0x5c, 0xde, 0x72, 0xf8, 0x97, 0xf9, 0xe8, 0x0c, 0xd5, 0x9b, 0xf8, 0xa3,
	0xbb, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x73, 0x5a, 0xe6, 0xaf, 0x3c, 0x01, 0x00, 0x00,
}

func (m *Promo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Promo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Promo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Prefs) > 0 {
		i -= len(m.Prefs)
		copy(dAtA[i:], m.Prefs)
		i = encodeVarintPromo(dAtA, i, uint64(len(m.Prefs)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Tags) > 0 {
		i -= len(m.Tags)
		copy(dAtA[i:], m.Tags)
		i = encodeVarintPromo(dAtA, i, uint64(len(m.Tags)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintPromo(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintPromo(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintPromo(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Pot) > 0 {
		i -= len(m.Pot)
		copy(dAtA[i:], m.Pot)
		i = encodeVarintPromo(dAtA, i, uint64(len(m.Pot)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintPromo(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintPromo(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintPromo(dAtA []byte, offset int, v uint64) int {
	offset -= sovPromo(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Promo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovPromo(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovPromo(uint64(l))
	}
	l = len(m.Pot)
	if l > 0 {
		n += 1 + l + sovPromo(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovPromo(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovPromo(uint64(l))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovPromo(uint64(l))
	}
	l = len(m.Tags)
	if l > 0 {
		n += 1 + l + sovPromo(uint64(l))
	}
	l = len(m.Prefs)
	if l > 0 {
		n += 1 + l + sovPromo(uint64(l))
	}
	return n
}

func sovPromo(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPromo(x uint64) (n int) {
	return sovPromo(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Promo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPromo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Promo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Promo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPromo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPromo
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPromo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPromo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPromo
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPromo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pot", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPromo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPromo
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPromo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pot = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPromo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPromo
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPromo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPromo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPromo
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPromo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPromo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPromo
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPromo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tags", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPromo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPromo
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPromo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tags = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prefs", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPromo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPromo
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPromo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Prefs = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPromo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPromo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPromo(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPromo
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPromo
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPromo
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPromo
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPromo
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPromo
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPromo        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPromo          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPromo = fmt.Errorf("proto: unexpected end of group")
)
