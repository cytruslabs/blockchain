// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: zestchain/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreatePromo struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Title   string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Pot     uint64 `protobuf:"varint,3,opt,name=pot,proto3" json:"pot,omitempty"`
	Url     string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Message string `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Tags    string `protobuf:"bytes,6,opt,name=tags,proto3" json:"tags,omitempty"`
	Prefs   string `protobuf:"bytes,7,opt,name=prefs,proto3" json:"prefs,omitempty"`
}

func (m *MsgCreatePromo) Reset()         { *m = MsgCreatePromo{} }
func (m *MsgCreatePromo) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePromo) ProtoMessage()    {}
func (*MsgCreatePromo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad62989248de80a, []int{0}
}
func (m *MsgCreatePromo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePromo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePromo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePromo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePromo.Merge(m, src)
}
func (m *MsgCreatePromo) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePromo) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePromo.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePromo proto.InternalMessageInfo

func (m *MsgCreatePromo) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreatePromo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MsgCreatePromo) GetPot() uint64 {
	if m != nil {
		return m.Pot
	}
	return 0
}

func (m *MsgCreatePromo) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *MsgCreatePromo) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *MsgCreatePromo) GetTags() string {
	if m != nil {
		return m.Tags
	}
	return ""
}

func (m *MsgCreatePromo) GetPrefs() string {
	if m != nil {
		return m.Prefs
	}
	return ""
}

type MsgCreatePromoResponse struct {
	Total string `protobuf:"bytes,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (m *MsgCreatePromoResponse) Reset()         { *m = MsgCreatePromoResponse{} }
func (m *MsgCreatePromoResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePromoResponse) ProtoMessage()    {}
func (*MsgCreatePromoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad62989248de80a, []int{1}
}
func (m *MsgCreatePromoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePromoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePromoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePromoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePromoResponse.Merge(m, src)
}
func (m *MsgCreatePromoResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePromoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePromoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePromoResponse proto.InternalMessageInfo

func (m *MsgCreatePromoResponse) GetTotal() string {
	if m != nil {
		return m.Total
	}
	return ""
}

type MsgPromoViewed struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Addr    string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (m *MsgPromoViewed) Reset()         { *m = MsgPromoViewed{} }
func (m *MsgPromoViewed) String() string { return proto.CompactTextString(m) }
func (*MsgPromoViewed) ProtoMessage()    {}
func (*MsgPromoViewed) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad62989248de80a, []int{2}
}
func (m *MsgPromoViewed) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPromoViewed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPromoViewed.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPromoViewed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPromoViewed.Merge(m, src)
}
func (m *MsgPromoViewed) XXX_Size() int {
	return m.Size()
}
func (m *MsgPromoViewed) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPromoViewed.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPromoViewed proto.InternalMessageInfo

func (m *MsgPromoViewed) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgPromoViewed) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MsgPromoViewed) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type MsgPromoViewedResponse struct {
}

func (m *MsgPromoViewedResponse) Reset()         { *m = MsgPromoViewedResponse{} }
func (m *MsgPromoViewedResponse) String() string { return proto.CompactTextString(m) }
func (*MsgPromoViewedResponse) ProtoMessage()    {}
func (*MsgPromoViewedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad62989248de80a, []int{3}
}
func (m *MsgPromoViewedResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPromoViewedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPromoViewedResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPromoViewedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPromoViewedResponse.Merge(m, src)
}
func (m *MsgPromoViewedResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgPromoViewedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPromoViewedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPromoViewedResponse proto.InternalMessageInfo

type MsgPromoClicked struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Addr    string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (m *MsgPromoClicked) Reset()         { *m = MsgPromoClicked{} }
func (m *MsgPromoClicked) String() string { return proto.CompactTextString(m) }
func (*MsgPromoClicked) ProtoMessage()    {}
func (*MsgPromoClicked) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad62989248de80a, []int{4}
}
func (m *MsgPromoClicked) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPromoClicked) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPromoClicked.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPromoClicked) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPromoClicked.Merge(m, src)
}
func (m *MsgPromoClicked) XXX_Size() int {
	return m.Size()
}
func (m *MsgPromoClicked) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPromoClicked.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPromoClicked proto.InternalMessageInfo

func (m *MsgPromoClicked) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgPromoClicked) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MsgPromoClicked) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type MsgPromoClickedResponse struct {
}

func (m *MsgPromoClickedResponse) Reset()         { *m = MsgPromoClickedResponse{} }
func (m *MsgPromoClickedResponse) String() string { return proto.CompactTextString(m) }
func (*MsgPromoClickedResponse) ProtoMessage()    {}
func (*MsgPromoClickedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad62989248de80a, []int{5}
}
func (m *MsgPromoClickedResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPromoClickedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPromoClickedResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPromoClickedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPromoClickedResponse.Merge(m, src)
}
func (m *MsgPromoClickedResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgPromoClickedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPromoClickedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPromoClickedResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreatePromo)(nil), "cytruslabs.zestchain.zestchain.MsgCreatePromo")
	proto.RegisterType((*MsgCreatePromoResponse)(nil), "cytruslabs.zestchain.zestchain.MsgCreatePromoResponse")
	proto.RegisterType((*MsgPromoViewed)(nil), "cytruslabs.zestchain.zestchain.MsgPromoViewed")
	proto.RegisterType((*MsgPromoViewedResponse)(nil), "cytruslabs.zestchain.zestchain.MsgPromoViewedResponse")
	proto.RegisterType((*MsgPromoClicked)(nil), "cytruslabs.zestchain.zestchain.MsgPromoClicked")
	proto.RegisterType((*MsgPromoClickedResponse)(nil), "cytruslabs.zestchain.zestchain.MsgPromoClickedResponse")
}

func init() { proto.RegisterFile("zestchain/tx.proto", fileDescriptor_8ad62989248de80a) }

var fileDescriptor_8ad62989248de80a = []byte{
	// 385 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x53, 0x3d, 0x4f, 0xeb, 0x30,
	0x14, 0x6d, 0xd2, 0x2f, 0xf5, 0xf6, 0xa9, 0xef, 0xc9, 0x7a, 0x7a, 0xcf, 0x74, 0x88, 0xaa, 0x4c,
	0x9d, 0x12, 0x01, 0x12, 0xec, 0x74, 0x44, 0x05, 0x94, 0x81, 0x81, 0x2d, 0x4d, 0x4c, 0x6a, 0x91,
	0xd6, 0x91, 0xed, 0x88, 0x96, 0x5f, 0xc1, 0xcf, 0xe0, 0xa7, 0x30, 0x76, 0x64, 0x44, 0xed, 0xcc,
	0x7f, 0x40, 0x76, 0x92, 0x36, 0x45, 0xa8, 0x6a, 0xc5, 0x76, 0xce, 0xf5, 0xf5, 0x39, 0xf7, 0x1e,
	0xcb, 0x80, 0x9e, 0x88, 0x90, 0xc1, 0xd8, 0xa7, 0x53, 0x57, 0xce, 0x9c, 0x84, 0x33, 0xc9, 0x90,
	0x15, 0xcc, 0x25, 0x4f, 0x45, 0xec, 0x8f, 0x84, 0xb3, 0x3e, 0xde, 0x20, 0xfb, 0xc5, 0x80, 0xce,
	0x50, 0x44, 0x03, 0x4e, 0x7c, 0x49, 0x6e, 0x38, 0x9b, 0x30, 0x84, 0xa1, 0x19, 0x28, 0xca, 0x38,
	0x36, 0x7a, 0x46, 0xbf, 0xe5, 0x15, 0x14, 0xfd, 0x85, 0xba, 0xa4, 0x32, 0x26, 0xd8, 0xd4, 0xf5,
	0x8c, 0xa0, 0x3f, 0x50, 0x4d, 0x98, 0xc4, 0xd5, 0x9e, 0xd1, 0xaf, 0x79, 0x0a, 0xaa, 0x4a, 0xca,
	0x63, 0x5c, 0xd3, 0x5d, 0x0a, 0x2a, 0xcd, 0x09, 0x11, 0xc2, 0x8f, 0x08, 0xae, 0x67, 0x9a, 0x39,
	0x45, 0x08, 0x6a, 0xd2, 0x8f, 0x04, 0x6e, 0xe8, 0xb2, 0xc6, 0xca, 0x27, 0xe1, 0xe4, 0x5e, 0xe0,
	0x66, 0xe6, 0xa3, 0x89, 0xed, 0xc0, 0xbf, 0xed, 0x49, 0x3d, 0x22, 0x12, 0x36, 0x15, 0x44, 0xcf,
	0xc5, 0xa4, 0x1f, 0xe7, 0xf3, 0x66, 0xc4, 0xbe, 0xd2, 0x9b, 0xe9, 0xce, 0x5b, 0x4a, 0x1e, 0x49,
	0xb8, 0x63, 0xb3, 0x0e, 0x98, 0x34, 0xcc, 0xd7, 0x32, 0x69, 0xa8, 0xa6, 0xf2, 0xc3, 0x90, 0xeb,
	0xa5, 0x5a, 0x9e, 0xc6, 0x36, 0xd6, 0xfe, 0x25, 0xbd, 0xc2, 0xdf, 0xbe, 0x86, 0xdf, 0xc5, 0xc9,
	0x20, 0xa6, 0xc1, 0xc3, 0x8f, 0xad, 0x8e, 0xe0, 0xff, 0x17, 0xc1, 0xc2, 0xeb, 0xe4, 0xc3, 0x84,
	0xea, 0x50, 0x44, 0x28, 0x85, 0x76, 0xf9, 0xd1, 0x1c, 0x67, 0xf7, 0x43, 0x3b, 0xdb, 0xd1, 0x75,
	0xcf, 0x0e, 0xeb, 0x5f, 0x47, 0x9d, 0x42, 0xbb, 0x9c, 0xe8, 0x3e, 0xb6, 0xa5, 0xfe, 0xbd, 0x6c,
	0xbf, 0x49, 0x18, 0xcd, 0xe0, 0xd7, 0x56, 0xbc, 0xee, 0xbe, 0x3a, 0xf9, 0x85, 0xee, 0xf9, 0x81,
	0x17, 0x0a, 0xe7, 0x8b, 0xcb, 0xd7, 0xa5, 0x65, 0x2c, 0x96, 0x96, 0xf1, 0xbe, 0xb4, 0x8c, 0xe7,
	0x95, 0x55, 0x59, 0xac, 0xac, 0xca, 0xdb, 0xca, 0xaa, 0xdc, 0x1d, 0x47, 0x54, 0x8e, 0xd3, 0x91,
	0x13, 0xb0, 0x89, 0xbb, 0x11, 0x77, 0x37, 0x9f, 0x70, 0x56, 0xc2, 0x72, 0x9e, 0x10, 0x31, 0x6a,
	0xe8, 0x4f, 0x79, 0xfa, 0x19, 0x00, 0x00, 0xff, 0xff, 0x2d, 0x18, 0x8a, 0x14, 0xaa, 0x03, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreatePromo(ctx context.Context, in *MsgCreatePromo, opts ...grpc.CallOption) (*MsgCreatePromoResponse, error)
	PromoViewed(ctx context.Context, in *MsgPromoViewed, opts ...grpc.CallOption) (*MsgPromoViewedResponse, error)
	PromoClicked(ctx context.Context, in *MsgPromoClicked, opts ...grpc.CallOption) (*MsgPromoClickedResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreatePromo(ctx context.Context, in *MsgCreatePromo, opts ...grpc.CallOption) (*MsgCreatePromoResponse, error) {
	out := new(MsgCreatePromoResponse)
	err := c.cc.Invoke(ctx, "/cytruslabs.zestchain.zestchain.Msg/CreatePromo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) PromoViewed(ctx context.Context, in *MsgPromoViewed, opts ...grpc.CallOption) (*MsgPromoViewedResponse, error) {
	out := new(MsgPromoViewedResponse)
	err := c.cc.Invoke(ctx, "/cytruslabs.zestchain.zestchain.Msg/PromoViewed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) PromoClicked(ctx context.Context, in *MsgPromoClicked, opts ...grpc.CallOption) (*MsgPromoClickedResponse, error) {
	out := new(MsgPromoClickedResponse)
	err := c.cc.Invoke(ctx, "/cytruslabs.zestchain.zestchain.Msg/PromoClicked", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreatePromo(context.Context, *MsgCreatePromo) (*MsgCreatePromoResponse, error)
	PromoViewed(context.Context, *MsgPromoViewed) (*MsgPromoViewedResponse, error)
	PromoClicked(context.Context, *MsgPromoClicked) (*MsgPromoClickedResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreatePromo(ctx context.Context, req *MsgCreatePromo) (*MsgCreatePromoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePromo not implemented")
}
func (*UnimplementedMsgServer) PromoViewed(ctx context.Context, req *MsgPromoViewed) (*MsgPromoViewedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PromoViewed not implemented")
}
func (*UnimplementedMsgServer) PromoClicked(ctx context.Context, req *MsgPromoClicked) (*MsgPromoClickedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PromoClicked not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreatePromo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreatePromo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreatePromo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cytruslabs.zestchain.zestchain.Msg/CreatePromo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreatePromo(ctx, req.(*MsgCreatePromo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_PromoViewed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgPromoViewed)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).PromoViewed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cytruslabs.zestchain.zestchain.Msg/PromoViewed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).PromoViewed(ctx, req.(*MsgPromoViewed))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_PromoClicked_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgPromoClicked)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).PromoClicked(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cytruslabs.zestchain.zestchain.Msg/PromoClicked",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).PromoClicked(ctx, req.(*MsgPromoClicked))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cytruslabs.zestchain.zestchain.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePromo",
			Handler:    _Msg_CreatePromo_Handler,
		},
		{
			MethodName: "PromoViewed",
			Handler:    _Msg_PromoViewed_Handler,
		},
		{
			MethodName: "PromoClicked",
			Handler:    _Msg_PromoClicked_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "zestchain/tx.proto",
}

func (m *MsgCreatePromo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePromo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePromo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Prefs) > 0 {
		i -= len(m.Prefs)
		copy(dAtA[i:], m.Prefs)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Prefs)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Tags) > 0 {
		i -= len(m.Tags)
		copy(dAtA[i:], m.Tags)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Tags)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x22
	}
	if m.Pot != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Pot))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreatePromoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePromoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePromoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Total) > 0 {
		i -= len(m.Total)
		copy(dAtA[i:], m.Total)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Total)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPromoViewed) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPromoViewed) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPromoViewed) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Addr) > 0 {
		i -= len(m.Addr)
		copy(dAtA[i:], m.Addr)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Addr)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPromoViewedResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPromoViewedResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPromoViewedResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgPromoClicked) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPromoClicked) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPromoClicked) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Addr) > 0 {
		i -= len(m.Addr)
		copy(dAtA[i:], m.Addr)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Addr)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPromoClickedResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPromoClickedResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPromoClickedResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreatePromo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Pot != 0 {
		n += 1 + sovTx(uint64(m.Pot))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Tags)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Prefs)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreatePromoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Total)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgPromoViewed) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Addr)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgPromoViewedResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgPromoClicked) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Addr)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgPromoClickedResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreatePromo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePromo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePromo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pot", wireType)
			}
			m.Pot = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Pot |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tags", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tags = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prefs", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Prefs = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePromoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePromoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePromoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Total", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Total = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPromoViewed) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPromoViewed: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPromoViewed: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Addr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Addr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPromoViewedResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPromoViewedResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPromoViewedResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPromoClicked) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPromoClicked: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPromoClicked: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Addr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Addr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPromoClickedResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPromoClickedResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPromoClickedResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
